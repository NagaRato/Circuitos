a0z = not(A0);
a1z = not(A1);
a01p = and(A0, a1z);
a01pn = not(a01p);
a01m = and(a0z, A1);
a01mn = not(a01m);
a01pmo = or(a01p,a01m);
a01pmon = not(a01pmo);
b0z = not(B0);
b1z = not(B1);
b01p = and(B0, b1z);
b01pn = not(b01p);
b01m = and(b0z, B1);
b01mn = not(b01m);
b01pmo = or(b01p,b01m);
b01pmon = not(b01pmo);
c0 = and();
c1 = and();
c0z = not(c0);
c1z = not(c1);
c01p = and(c0, c1z);
c01pn = not(c01p);
c01m = and(c0z, c1);
c01mn = not(c01m);
c01pmo = or(c01p,c01m);
c01pmon = not(c01pmo);
z01pab = and(a01p, b01p, c01mn);
z01pac = and(a01p, b01mn, c01p);
z01pbc = and(a01mn, b01p, c01p);
c2 = or(z01pab, z01pac, z01pbc);
z01mab = and(a01m, b01m, c01pn);
z01mac = and(a01m, b01pn, c01m);
z01mbc = and(a01pn, b01m, c01m);
c3 = or(z01mab, z01mac, z01mbc);
rbc01z = and(b01pmon, c01pmon);
rbc01p = or(b01p, c01p);
rbc01m = or(b01m, c01m);
rbc01pe = and(rbc01p, b01pmo, c01pmo);
rbc01me = and(rbc01m, b01pmo, c01pmo);
rbc01pez = or(rbc01pe, rbc01z);
rbc01mez = or(rbc01me, rbc01z);
rac01z = and(a01pmon, c01pmon);
rac01p = or(a01p, c01p);
rac01m = or(a01m, c01m);
rac01pe = and(rac01p, a01pmo, c01pmo);
rac01me = and(rac01m, a01pmo, c01pmo);
rac01pez = or(rac01pe, rac01z);
rac01mez = or(rac01me, rac01z);
rab01z = and(a01pmon, b01pmon);
rab01p = or(a01p, b01p);
rab01m = or(a01m, b01m);
rab01pe = and(rab01p, a01pmo, b01pmo);
rab01me = and(rab01m, a01pmo, b01pmo);
rab01pez = or(rab01pe, rab01z);
rab01mez = or(rab01me, rab01z);
r01p1 = and(a01p, rbc01pez);
r01p2 = and(b01p, rac01pez);
r01p3 = and(c01p, rab01pez);
R0 = or(r01p1, r01p2, r01p3);
r01m1 = and(a01m, rbc01mez);
r01m2 = and(b01m, rac01mez);
r01m3 = and(c01m, rab01mez);
R1 = or(r01m1, r01m2, r01m3);
a2z = not(A2);
a3z = not(A3);
a23p = and(A2, a3z);
a23pn = not(a23p);
a23m = and(a2z, A3);
a23mn = not(a23m);
a23pmo = or(a23p,a23m);
a23pmon = not(a23pmo);
b2z = not(B2);
b3z = not(B3);
b23p = and(B2, b3z);
b23pn = not(b23p);
b23m = and(b2z, B3);
b23mn = not(b23m);
b23pmo = or(b23p,b23m);
b23pmon = not(b23pmo);
c2z = not(c2);
c3z = not(c3);
c23p = and(c2, c3z);
c23pn = not(c23p);
c23m = and(c2z, c3);
c23mn = not(c23m);
c23pmo = or(c23p,c23m);
c23pmon = not(c23pmo);
z23pab = and(a23p, b23p, c23mn);
z23pac = and(a23p, b23mn, c23p);
z23pbc = and(a23mn, b23p, c23p);
Z2 = or(z23pab, z23pac, z23pbc);
z23mab = and(a23m, b23m, c23pn);
z23mac = and(a23m, b23pn, c23m);
z23mbc = and(a23pn, b23m, c23m);
Z3 = or(z23mab, z23mac, z23mbc);
rbc23z = and(b23pmon, c23pmon);
rbc23p = or(b23p, c23p);
rbc23m = or(b23m, c23m);
rbc23pe = and(rbc23p, b23pmo, c23pmo);
rbc23me = and(rbc23m, b23pmo, c23pmo);
rbc23pez = or(rbc23pe, rbc23z);
rbc23mez = or(rbc23me, rbc23z);
rac23z = and(a23pmon, c23pmon);
rac23p = or(a23p, c23p);
rac23m = or(a23m, c23m);
rac23pe = and(rac23p, a23pmo, c23pmo);
rac23me = and(rac23m, a23pmo, c23pmo);
rac23pez = or(rac23pe, rac23z);
rac23mez = or(rac23me, rac23z);
rab23z = and(a23pmon, b23pmon);
rab23p = or(a23p, b23p);
rab23m = or(a23m, b23m);
rab23pe = and(rab23p, a23pmo, b23pmo);
rab23me = and(rab23m, a23pmo, b23pmo);
rab23pez = or(rab23pe, rab23z);
rab23mez = or(rab23me, rab23z);
r23px = and(a23p, rbc23pez);
r23py = and(b23p, rac23pez);
r23pz = and(c23p, rab23pez);
R2 = or(r23px, r23py, r23pz);
r23mx = and(a23m, rbc23mez);
r23my = and(b23m, rac23mez);
r23mz = and(c23m, rab23mez);
R3 = or(r23mx, r23my, r23mz)